import React from 'react';
import dayjs from 'dayjs';
import relativeTime from 'dayjs/plugin/relativeTime';
import {Link} from 'react-router-dom';

//MUI 
import withStyles from '@material-ui/core/styles/withStyles';
import Card from '@material-ui/core/Card';
import CardContent from '@material-ui/core/CardContent';
import CardActions from '@material-ui/core/CardActions';
import Typography from '@material-ui/core/Typography';
import Divider from '@material-ui/core/Divider';
import Button from '@material-ui/core/Button';
import CircularProgress from '@material-ui/core/CircularProgress';
import AddTasktoSchedules from './dialogs/AddTasktoSchedules';


//Icons
import AccessTimeIcon from '@material-ui/icons/AccessTime';
import AssignmentIndIcon from '@material-ui/icons/AssignmentInd';
import ContactsIcon from '@material-ui/icons/Contacts';
import AccountBalanceIcon from '@material-ui/icons/AccountBalance';
import Looks4Icon from '@material-ui/icons/Looks4';

//redux
import {connect} from 'react-redux';

const styles = theme => ({
    card: {
        marginBottom: 20,
    },
    infoContainer: {
        position: 'relative',
        display: 'flex',
        flexDirection: 'row',
        flexWrap: 'wrap',
    },
    lightTitle: {
        position: 'absolute',
        right: 10,
        marginBottom: 20,
        [theme.breakpoints.down("md")]: {
            display: 'none'
        }
    },
    item: {
        display: 'flex',
        flexDirection: 'row',
        margin: 10,
        width: '40%',
    },
    note: {
        marginLeft: 20,
    },
    spinner: {
        position: 'absolute',
    }
});

const mapStateToProps = state => ({
    loading: state.UI.loading,
    schedule: state.schedulesData.schedule,
});

const Schedule = ({classes, schedule, loading}) => {
    
    dayjs.extend(relativeTime);
    const {created_at, created_by, visit_date, status, customer_name, customer_address, department_name, number_of_tasks, agent_id, document_id} = schedule;

    return (
        <Card className={classes.card}>
            <CardContent className={classes.infoContainer}>
                <Typography vairant="body2" color="textSecondary" className={classes.lightTitle}>
                    <i>This schedule was generated by {created_by === agent_id ? "an agent" : "the office"} {dayjs(created_at._seconds * 1000).fromNow()}</i>
                </Typography>
                <div className={classes.item}>
                <AccessTimeIcon color={status === 'pending' ? 'secondary' : status === 'started' ? 'primary' : ''} /> <span className={classes.note}>Visit Date <strong>{dayjs(visit_date._seconds * 1000).format('h: mm a, MMMM DD YYYY')} ({status})</strong></span>
                </div>
                <div className={classes.item}>
                    <AssignmentIndIcon color="primary" /> <span className={classes.note}> Customer <strong>{customer_name}</strong> </span>
                </div>
                <div className={classes.item}>
                    <ContactsIcon color="primary" /> <span className={classes.note}> Customer Address <strong>{customer_address}</strong> </span>
                </div>
                <div className={classes.item}>
                    <AccountBalanceIcon color="primary" /> <span className={classes.note}> Department <strong>{department_name}</strong> </span>
                </div>
                <div className={classes.item}>
                    <Looks4Icon color="primary" /> <span className={classes.note}> Number Of Tasks <strong>{number_of_tasks}</strong> </span>
                </div>
            </CardContent>
            <Divider />
            <CardActions>
                <Button
                variant="contained"
                color="primary"
                component={Link}
                to="/schedules"
                >Back</Button>

            {(status ==='started' || status === 'pending') &&
             <AddTasktoSchedules
               dialogTitle =" Add Task To Schedule"
               buttonTitle="ADD TASK"
               buttonColor="primary"/>
            }
             
            </CardActions>
        </Card>
    )
}

export default connect(
    mapStateToProps,
)(withStyles(styles)(React.memo(Schedule)));
